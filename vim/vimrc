" Leader
let mapleader = '\'

syntax on                    	   " Turn on syntax highlighting.

set nocompatible                  " Vim settings, rather then Vi settings.
set tags=tags
set showcmd                       " Display incomplete commands.
set showmode                      " Display the mode you're in.
set backspace=indent,eol,start    " Intuitive backspacing.
set hidden                        " Handle multiple buffers better.
set wildmenu                      " Enhanced command line completion.
set wildmode=list:longest         " Complete files like a shell.
set ignorecase                    " Case-insensitive searching.
set smartcase                     " But case-sensitive if expression contains a capital letter.
set number                        " Show line numbers.
set ruler                         " Show cursor position.
set incsearch                     " Highlight matches as you type.
set hlsearch                      " Highlight matches.
set wrap                          " Turn on line wrapping.
set scrolloff=3                   " Show 3 lines of context around the cursor.
set title                         " Set the terminal's title
set visualbell                    " No beeping.
set nobackup                      " Don't make a backup before overwriting a file.
set nowritebackup                 " And again.
set directory=/var/tmp            " Keep swap files in one location
set laststatus=2                  " Show the status line all the time
set colorcolumn=121               " Show a line at 121 characters
set textwidth=80                  " Wrap when line hits the 80 character mark
set foldmethod=syntax
set foldlevelstart=99
set foldlevel=99
set timeoutlen=200
set formatoptions+=t
au BufRead,BufNewFile *.scss set filetype=scss
au BufRead,BufNewFile *.ejs set filetype=html

" Softtabs, 2 spaces
set tabstop=2                     " Global tab width.
set shiftwidth=2                  " And again, related.
set expandtab                     " Use spaces instead of tabs

" Useful status information at bottom of screen
set statusline=[%n]\ %<%.99f\ %h%w%m%r%y\ %{exists('*CapsLockStatusline')?CapsLockStatusline():''}%=%-16(\ %l,%c-%v\ %)%P

" Remove trailing spaces
autocmd BufWritePre *.rb :%s/\s\+$//e

" Normal mode and save
map <Leader>s <ESC>:w<CR>

" Get off my lawn
nnoremap <Left> :echoe "Use h"<CR>
nnoremap <Right> :echoe "Use l"<CR>
nnoremap <Up> :echoe "Use k"<CR>
nnoremap <Down> :echoe "Use j"<CR>

" Open new split panes to right and bottom, which feels more natural
set splitbelow
set splitright

" Quicker window movement
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-h> <C-w>h
nnoremap <C-l> <C-w>l

" Bind to CAP 
command! E e
command! W w
command! Q q
command! Wall wall
command! Qall qall

" Update CTags
map <F5> :exec "!ctags *"<CR>

" Copy current file to a new location
function! CopyFile()
  let old_name = expand('%')
  let new_name = input('Copying file. New file name: ', expand('%'), 'file')
  if new_name != '' && new_name != old_name
    exec ':saveas ' . new_name
    redraw!
  endif
endfunction

map <leader>c :call CopyFile()<cr>

" Create current directory tree
command! Mkdir :silent exec "!mkdir -p %:h" | redraw!

if filereadable(expand("~/.vimrc.bundles"))
  source ~/.vimrc.bundles
endif

" Treat <li> and <p> tags like the block tags they are
let g:html_indent_tags = 'li\|p'

" Set up vim-test
nmap <silent> <leader>r :TestFile<CR>
nmap <silent> <leader>R :TestNearest<CR>
let g:test#strategy = 'vimux'

" Run specs in split screen
let g:VimuxOrientation = 'h'
if (&columns > 200)
  let g:VimuxHeight = 30
else
  let g:VimuxHeight = 50
endif

" :A is from rails.vim plugin
nnoremap <leader>a :A<CR>

" Configure syntastic syntax checking to check on open as well as save
let g:syntastic_check_on_open=1

" Open nerdtree with leader + n
map <leader>n :NERDTreeToggle<CR>

" Use relative numbering
set rnu
